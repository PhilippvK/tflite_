# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite_

class BuiltinOptions(object):
    NONE = 0
    Conv2DOptions = 1
    DepthwiseConv2DOptions = 2
    ConcatEmbeddingsOptions = 3
    LSHProjectionOptions = 4
    Pool2DOptions = 5
    SVDFOptions = 6
    RNNOptions = 7
    FullyConnectedOptions = 8
    SoftmaxOptions = 9
    ConcatenationOptions = 10
    AddOptions = 11
    L2NormOptions = 12
    LocalResponseNormalizationOptions = 13
    LSTMOptions = 14
    ResizeBilinearOptions = 15
    CallOptions = 16
    ReshapeOptions = 17
    SkipGramOptions = 18
    SpaceToDepthOptions = 19
    EmbeddingLookupSparseOptions = 20
    MulOptions = 21
    PadOptions = 22
    GatherOptions = 23
    BatchToSpaceNDOptions = 24
    SpaceToBatchNDOptions = 25
    TransposeOptions = 26
    ReducerOptions = 27
    SubOptions = 28
    DivOptions = 29
    SqueezeOptions = 30
    SequenceRNNOptions = 31
    StridedSliceOptions = 32
    ExpOptions = 33
    TopKV2Options = 34
    SplitOptions = 35
    LogSoftmaxOptions = 36
    CastOptions = 37
    DequantizeOptions = 38
    MaximumMinimumOptions = 39
    ArgMaxOptions = 40
    LessOptions = 41
    NegOptions = 42
    PadV2Options = 43
    GreaterOptions = 44
    GreaterEqualOptions = 45
    LessEqualOptions = 46
    SelectOptions = 47
    SliceOptions = 48
    TransposeConvOptions = 49
    SparseToDenseOptions = 50
    TileOptions = 51
    ExpandDimsOptions = 52
    EqualOptions = 53
    NotEqualOptions = 54
    ShapeOptions = 55
    PowOptions = 56
    ArgMinOptions = 57
    FakeQuantOptions = 58
    PackOptions = 59
    LogicalOrOptions = 60
    OneHotOptions = 61
    LogicalAndOptions = 62
    LogicalNotOptions = 63
    UnpackOptions = 64
    FloorDivOptions = 65
    SquareOptions = 66
    ZerosLikeOptions = 67
    FillOptions = 68
    BidirectionalSequenceLSTMOptions = 69
    BidirectionalSequenceRNNOptions = 70
    UnidirectionalSequenceLSTMOptions = 71
    FloorModOptions = 72
    RangeOptions = 73
    ResizeNearestNeighborOptions = 74
    LeakyReluOptions = 75
    SquaredDifferenceOptions = 76
    MirrorPadOptions = 77
    AbsOptions = 78
    SplitVOptions = 79
    UniqueOptions = 80
    ReverseV2Options = 81
    AddNOptions = 82
    GatherNdOptions = 83
    CosOptions = 84
    WhereOptions = 85
    RankOptions = 86
    ReverseSequenceOptions = 87
    MatrixDiagOptions = 88
    QuantizeOptions = 89
    MatrixSetDiagOptions = 90
    HardSwishOptions = 91
    IfOptions = 92
    WhileOptions = 93
    DepthToSpaceOptions = 94
    NonMaxSuppressionV4Options = 95
    NonMaxSuppressionV5Options = 96
    ScatterNdOptions = 97
    SelectV2Options = 98
    DensifyOptions = 99
    SegmentSumOptions = 100
    BatchMatMulOptions = 101


def BuiltinOptionsCreator(unionType, table):
    from flatbuffers.table import Table
    if not isinstance(table, Table):
        return None
    if unionType == BuiltinOptions().Conv2DOptions:
        import tflite_.Conv2DOptions
        return tflite_.Conv2DOptions.Conv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthwiseConv2DOptions:
        import tflite_.DepthwiseConv2DOptions
        return tflite_.DepthwiseConv2DOptions.DepthwiseConv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatEmbeddingsOptions:
        import tflite_.ConcatEmbeddingsOptions
        return tflite_.ConcatEmbeddingsOptions.ConcatEmbeddingsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSHProjectionOptions:
        import tflite_.LSHProjectionOptions
        return tflite_.LSHProjectionOptions.LSHProjectionOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().Pool2DOptions:
        import tflite_.Pool2DOptions
        return tflite_.Pool2DOptions.Pool2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SVDFOptions:
        import tflite_.SVDFOptions
        return tflite_.SVDFOptions.SVDFOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RNNOptions:
        import tflite_.RNNOptions
        return tflite_.RNNOptions.RNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FullyConnectedOptions:
        import tflite_.FullyConnectedOptions
        return tflite_.FullyConnectedOptions.FullyConnectedOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SoftmaxOptions:
        import tflite_.SoftmaxOptions
        return tflite_.SoftmaxOptions.SoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatenationOptions:
        import tflite_.ConcatenationOptions
        return tflite_.ConcatenationOptions.ConcatenationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddOptions:
        import tflite_.AddOptions
        return tflite_.AddOptions.AddOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().L2NormOptions:
        import tflite_.L2NormOptions
        return tflite_.L2NormOptions.L2NormOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LocalResponseNormalizationOptions:
        import tflite_.LocalResponseNormalizationOptions
        return tflite_.LocalResponseNormalizationOptions.LocalResponseNormalizationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSTMOptions:
        import tflite_.LSTMOptions
        return tflite_.LSTMOptions.LSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeBilinearOptions:
        import tflite_.ResizeBilinearOptions
        return tflite_.ResizeBilinearOptions.ResizeBilinearOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CallOptions:
        import tflite_.CallOptions
        return tflite_.CallOptions.CallOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReshapeOptions:
        import tflite_.ReshapeOptions
        return tflite_.ReshapeOptions.ReshapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SkipGramOptions:
        import tflite_.SkipGramOptions
        return tflite_.SkipGramOptions.SkipGramOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToDepthOptions:
        import tflite_.SpaceToDepthOptions
        return tflite_.SpaceToDepthOptions.SpaceToDepthOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EmbeddingLookupSparseOptions:
        import tflite_.EmbeddingLookupSparseOptions
        return tflite_.EmbeddingLookupSparseOptions.EmbeddingLookupSparseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MulOptions:
        import tflite_.MulOptions
        return tflite_.MulOptions.MulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadOptions:
        import tflite_.PadOptions
        return tflite_.PadOptions.PadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherOptions:
        import tflite_.GatherOptions
        return tflite_.GatherOptions.GatherOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchToSpaceNDOptions:
        import tflite_.BatchToSpaceNDOptions
        return tflite_.BatchToSpaceNDOptions.BatchToSpaceNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToBatchNDOptions:
        import tflite_.SpaceToBatchNDOptions
        return tflite_.SpaceToBatchNDOptions.SpaceToBatchNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeOptions:
        import tflite_.TransposeOptions
        return tflite_.TransposeOptions.TransposeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReducerOptions:
        import tflite_.ReducerOptions
        return tflite_.ReducerOptions.ReducerOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SubOptions:
        import tflite_.SubOptions
        return tflite_.SubOptions.SubOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DivOptions:
        import tflite_.DivOptions
        return tflite_.DivOptions.DivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SqueezeOptions:
        import tflite_.SqueezeOptions
        return tflite_.SqueezeOptions.SqueezeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SequenceRNNOptions:
        import tflite_.SequenceRNNOptions
        return tflite_.SequenceRNNOptions.SequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().StridedSliceOptions:
        import tflite_.StridedSliceOptions
        return tflite_.StridedSliceOptions.StridedSliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpOptions:
        import tflite_.ExpOptions
        return tflite_.ExpOptions.ExpOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TopKV2Options:
        import tflite_.TopKV2Options
        return tflite_.TopKV2Options.TopKV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitOptions:
        import tflite_.SplitOptions
        return tflite_.SplitOptions.SplitOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogSoftmaxOptions:
        import tflite_.LogSoftmaxOptions
        return tflite_.LogSoftmaxOptions.LogSoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CastOptions:
        import tflite_.CastOptions
        return tflite_.CastOptions.CastOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DequantizeOptions:
        import tflite_.DequantizeOptions
        return tflite_.DequantizeOptions.DequantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MaximumMinimumOptions:
        import tflite_.MaximumMinimumOptions
        return tflite_.MaximumMinimumOptions.MaximumMinimumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMaxOptions:
        import tflite_.ArgMaxOptions
        return tflite_.ArgMaxOptions.ArgMaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessOptions:
        import tflite_.LessOptions
        return tflite_.LessOptions.LessOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NegOptions:
        import tflite_.NegOptions
        return tflite_.NegOptions.NegOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadV2Options:
        import tflite_.PadV2Options
        return tflite_.PadV2Options.PadV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterOptions:
        import tflite_.GreaterOptions
        return tflite_.GreaterOptions.GreaterOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterEqualOptions:
        import tflite_.GreaterEqualOptions
        return tflite_.GreaterEqualOptions.GreaterEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessEqualOptions:
        import tflite_.LessEqualOptions
        return tflite_.LessEqualOptions.LessEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectOptions:
        import tflite_.SelectOptions
        return tflite_.SelectOptions.SelectOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SliceOptions:
        import tflite_.SliceOptions
        return tflite_.SliceOptions.SliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeConvOptions:
        import tflite_.TransposeConvOptions
        return tflite_.TransposeConvOptions.TransposeConvOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SparseToDenseOptions:
        import tflite_.SparseToDenseOptions
        return tflite_.SparseToDenseOptions.SparseToDenseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TileOptions:
        import tflite_.TileOptions
        return tflite_.TileOptions.TileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpandDimsOptions:
        import tflite_.ExpandDimsOptions
        return tflite_.ExpandDimsOptions.ExpandDimsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EqualOptions:
        import tflite_.EqualOptions
        return tflite_.EqualOptions.EqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NotEqualOptions:
        import tflite_.NotEqualOptions
        return tflite_.NotEqualOptions.NotEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ShapeOptions:
        import tflite_.ShapeOptions
        return tflite_.ShapeOptions.ShapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PowOptions:
        import tflite_.PowOptions
        return tflite_.PowOptions.PowOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMinOptions:
        import tflite_.ArgMinOptions
        return tflite_.ArgMinOptions.ArgMinOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FakeQuantOptions:
        import tflite_.FakeQuantOptions
        return tflite_.FakeQuantOptions.FakeQuantOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PackOptions:
        import tflite_.PackOptions
        return tflite_.PackOptions.PackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalOrOptions:
        import tflite_.LogicalOrOptions
        return tflite_.LogicalOrOptions.LogicalOrOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().OneHotOptions:
        import tflite_.OneHotOptions
        return tflite_.OneHotOptions.OneHotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalAndOptions:
        import tflite_.LogicalAndOptions
        return tflite_.LogicalAndOptions.LogicalAndOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalNotOptions:
        import tflite_.LogicalNotOptions
        return tflite_.LogicalNotOptions.LogicalNotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnpackOptions:
        import tflite_.UnpackOptions
        return tflite_.UnpackOptions.UnpackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorDivOptions:
        import tflite_.FloorDivOptions
        return tflite_.FloorDivOptions.FloorDivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquareOptions:
        import tflite_.SquareOptions
        return tflite_.SquareOptions.SquareOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ZerosLikeOptions:
        import tflite_.ZerosLikeOptions
        return tflite_.ZerosLikeOptions.ZerosLikeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FillOptions:
        import tflite_.FillOptions
        return tflite_.FillOptions.FillOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceLSTMOptions:
        import tflite_.BidirectionalSequenceLSTMOptions
        return tflite_.BidirectionalSequenceLSTMOptions.BidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceRNNOptions:
        import tflite_.BidirectionalSequenceRNNOptions
        return tflite_.BidirectionalSequenceRNNOptions.BidirectionalSequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnidirectionalSequenceLSTMOptions:
        import tflite_.UnidirectionalSequenceLSTMOptions
        return tflite_.UnidirectionalSequenceLSTMOptions.UnidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorModOptions:
        import tflite_.FloorModOptions
        return tflite_.FloorModOptions.FloorModOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RangeOptions:
        import tflite_.RangeOptions
        return tflite_.RangeOptions.RangeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeNearestNeighborOptions:
        import tflite_.ResizeNearestNeighborOptions
        return tflite_.ResizeNearestNeighborOptions.ResizeNearestNeighborOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LeakyReluOptions:
        import tflite_.LeakyReluOptions
        return tflite_.LeakyReluOptions.LeakyReluOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquaredDifferenceOptions:
        import tflite_.SquaredDifferenceOptions
        return tflite_.SquaredDifferenceOptions.SquaredDifferenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MirrorPadOptions:
        import tflite_.MirrorPadOptions
        return tflite_.MirrorPadOptions.MirrorPadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AbsOptions:
        import tflite_.AbsOptions
        return tflite_.AbsOptions.AbsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitVOptions:
        import tflite_.SplitVOptions
        return tflite_.SplitVOptions.SplitVOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UniqueOptions:
        import tflite_.UniqueOptions
        return tflite_.UniqueOptions.UniqueOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseV2Options:
        import tflite_.ReverseV2Options
        return tflite_.ReverseV2Options.ReverseV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddNOptions:
        import tflite_.AddNOptions
        return tflite_.AddNOptions.AddNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherNdOptions:
        import tflite_.GatherNdOptions
        return tflite_.GatherNdOptions.GatherNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CosOptions:
        import tflite_.CosOptions
        return tflite_.CosOptions.CosOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhereOptions:
        import tflite_.WhereOptions
        return tflite_.WhereOptions.WhereOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RankOptions:
        import tflite_.RankOptions
        return tflite_.RankOptions.RankOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseSequenceOptions:
        import tflite_.ReverseSequenceOptions
        return tflite_.ReverseSequenceOptions.ReverseSequenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixDiagOptions:
        import tflite_.MatrixDiagOptions
        return tflite_.MatrixDiagOptions.MatrixDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().QuantizeOptions:
        import tflite_.QuantizeOptions
        return tflite_.QuantizeOptions.QuantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixSetDiagOptions:
        import tflite_.MatrixSetDiagOptions
        return tflite_.MatrixSetDiagOptions.MatrixSetDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HardSwishOptions:
        import tflite_.HardSwishOptions
        return tflite_.HardSwishOptions.HardSwishOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().IfOptions:
        import tflite_.IfOptions
        return tflite_.IfOptions.IfOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhileOptions:
        import tflite_.WhileOptions
        return tflite_.WhileOptions.WhileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthToSpaceOptions:
        import tflite_.DepthToSpaceOptions
        return tflite_.DepthToSpaceOptions.DepthToSpaceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV4Options:
        import tflite_.NonMaxSuppressionV4Options
        return tflite_.NonMaxSuppressionV4Options.NonMaxSuppressionV4OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV5Options:
        import tflite_.NonMaxSuppressionV5Options
        return tflite_.NonMaxSuppressionV5Options.NonMaxSuppressionV5OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ScatterNdOptions:
        import tflite_.ScatterNdOptions
        return tflite_.ScatterNdOptions.ScatterNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectV2Options:
        import tflite_.SelectV2Options
        return tflite_.SelectV2Options.SelectV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DensifyOptions:
        import tflite_.DensifyOptions
        return tflite_.DensifyOptions.DensifyOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SegmentSumOptions:
        import tflite_.SegmentSumOptions
        return tflite_.SegmentSumOptions.SegmentSumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchMatMulOptions:
        import tflite_.BatchMatMulOptions
        return tflite_.BatchMatMulOptions.BatchMatMulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    return None
